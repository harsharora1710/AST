{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ha721\\\\OneDrive\\\\Desktop\\\\Assignment-01\\\\rule-engine\\\\client\\\\rule-combiner\\\\src\\\\components\\\\EvaluateRules.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EvaluateRules({\n  combinedAST,\n  inputData,\n  setEvaluationResult,\n  setError\n}) {\n  _s();\n  const [astString, setAstString] = useState('');\n  const handleEvaluate = async () => {\n    try {\n      const astResponse = await fetch('/api/createAST', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rule: astString\n        })\n      });\n      const astData = await astResponse.json();\n      if (astResponse.ok) {\n        const evalResponse = await fetch('/api/evaluateRule', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            ast: astData.ast,\n            data: inputData\n          })\n        });\n        const evalData = await evalResponse.json();\n        if (evalResponse.ok) {\n          setEvaluationResult(evalData.result);\n        } else {\n          throw new Error(evalData.message || 'Failed to evaluate rule');\n        }\n      } else {\n        throw new Error(astData.message || 'Failed to create AST');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Evaluate Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"AST String\",\n        value: astString,\n        onChange: e => setAstString(e.target.value),\n        placeholder: \"Enter rule to generate AST\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEvaluate,\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Evaluate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(EvaluateRules, \"XsumNmskVkAynkWjh5Qy6/hPggY=\");\n_c = EvaluateRules;\nexport default EvaluateRules;\nvar _c;\n$RefreshReg$(_c, \"EvaluateRules\");","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Box","jsxDEV","_jsxDEV","EvaluateRules","combinedAST","inputData","setEvaluationResult","setError","_s","astString","setAstString","handleEvaluate","astResponse","fetch","method","headers","body","JSON","stringify","rule","astData","json","ok","evalResponse","ast","data","evalData","result","Error","message","error","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","mb","label","value","onChange","e","target","placeholder","fullWidth","onClick","color","style","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/ha721/OneDrive/Desktop/Assignment-01/rule-engine/client/rule-combiner/src/components/EvaluateRules.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Typography, Box } from '@mui/material';\r\n\r\nfunction EvaluateRules({ combinedAST, inputData, setEvaluationResult, setError }) {\r\n  const [astString, setAstString] = useState('');\r\n\r\n  const handleEvaluate = async () => {\r\n    try {\r\n      const astResponse = await fetch('/api/createAST', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ rule: astString }),\r\n      });\r\n\r\n      const astData = await astResponse.json();\r\n\r\n      if (astResponse.ok) {\r\n        const evalResponse = await fetch('/api/evaluateRule', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ ast: astData.ast, data: inputData }),\r\n        });\r\n\r\n        const evalData = await evalResponse.json();\r\n\r\n        if (evalResponse.ok) {\r\n          setEvaluationResult(evalData.result);\r\n        } else {\r\n          throw new Error(evalData.message || 'Failed to evaluate rule');\r\n        }\r\n      } else {\r\n        throw new Error(astData.message || 'Failed to create AST');\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\" gutterBottom>Evaluate Rule</Typography>\r\n      <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n        <TextField\r\n          label=\"AST String\"\r\n          value={astString}\r\n          onChange={(e) => setAstString(e.target.value)}\r\n          placeholder=\"Enter rule to generate AST\"\r\n          fullWidth\r\n        />\r\n        <Button onClick={handleEvaluate} variant=\"contained\" color=\"primary\" style={{ marginLeft: '10px' }}>\r\n          Evaluate\r\n        </Button>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EvaluateRules;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}