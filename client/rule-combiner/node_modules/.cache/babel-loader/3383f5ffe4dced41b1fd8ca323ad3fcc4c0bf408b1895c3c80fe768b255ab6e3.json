{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ha721\\\\OneDrive\\\\Desktop\\\\Assignment-01\\\\rule-engine\\\\client\\\\rule-combiner\\\\src\\\\components\\\\RuleForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RuleForm({\n  onAddRule\n}) {\n  _s();\n  const [ruleString, setRuleString] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Perform validation if needed\n    if (ruleString.trim() === '') {\n      setError('Rule cannot be empty');\n      return;\n    }\n    try {\n      // Send the rule to the backend\n      const response = await fetch('http://localhost:5000/rules', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rule: ruleString\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const result = await response.json();\n\n      // Optionally, call the onAddRule prop to update the UI\n      onAddRule(result.rule); // Assuming the backend returns the created rule\n\n      // Clear the input\n      setRuleString('');\n      setError(null); // Clear any previous errors\n    } catch (error) {\n      setError('Failed to add rule');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Rule:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ruleString,\n        onChange: e => setRuleString(e.target.value),\n        placeholder: \"e.g., age > 30 AND department = 'Sales'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(RuleForm, \"QNV0JdoqMUlsFQ7Fk5UxbLzXn5M=\");\n_c = RuleForm;\nexport default RuleForm;\nvar _c;\n$RefreshReg$(_c, \"RuleForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RuleForm","onAddRule","_s","ruleString","setRuleString","error","setError","handleSubmit","event","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","rule","ok","Error","result","json","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ha721/OneDrive/Desktop/Assignment-01/rule-engine/client/rule-combiner/src/components/RuleForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction RuleForm({ onAddRule }) {\r\n  const [ruleString, setRuleString] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    // Perform validation if needed\r\n    if (ruleString.trim() === '') {\r\n      setError('Rule cannot be empty');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send the rule to the backend\r\n      const response = await fetch('http://localhost:5000/rules', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ rule: ruleString }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const result = await response.json();\r\n      \r\n      // Optionally, call the onAddRule prop to update the UI\r\n      onAddRule(result.rule); // Assuming the backend returns the created rule\r\n      \r\n      // Clear the input\r\n      setRuleString('');\r\n      setError(null); // Clear any previous errors\r\n    } catch (error) {\r\n      setError('Failed to add rule');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Create Rule</h2>\r\n      <label>\r\n        Rule:\r\n        <input\r\n          type=\"text\"\r\n          value={ruleString}\r\n          onChange={(e) => setRuleString(e.target.value)}\r\n          placeholder=\"e.g., age > 30 AND department = 'Sales'\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add Rule</button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default RuleForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAIN,UAAU,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BJ,QAAQ,CAAC,sBAAsB,CAAC;MAChC;IACF;IAEA,IAAI;MACF;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAEf;QAAW,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACQ,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;MAEpC;MACArB,SAAS,CAACoB,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC;;MAExB;MACAd,aAAa,CAAC,EAAE,CAAC;MACjBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdC,QAAQ,CAAC,oBAAoB,CAAC;IAChC;EACF,CAAC;EAED,oBACEP,OAAA;IAAMwB,QAAQ,EAAEhB,YAAa;IAAAiB,QAAA,gBAC3BzB,OAAA;MAAAyB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB7B,OAAA;MAAAyB,QAAA,GAAO,OAEL,eAAAzB,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3B,UAAW;QAClB4B,QAAQ,EAAGC,CAAC,IAAK5B,aAAa,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAyC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACR7B,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtCvB,KAAK,iBAAIN,OAAA;MAAGoC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEX;AAAC1B,EAAA,CAxDQF,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}