{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ha721\\\\OneDrive\\\\Desktop\\\\Assignment-01\\\\rule-engine\\\\client\\\\rule-combiner\\\\src\\\\components\\\\CombineRules.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CombineRules({\n  rules,\n  setCombinedAST,\n  setError\n}) {\n  const handleCombine = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/combine', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rules\n        })\n      });\n      const data = await response.json();\n      setCombinedAST(data);\n    } catch (err) {\n      setError('Failed to combine rules.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCombine,\n      disabled: rules.length === 0,\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = CombineRules;\nexport default CombineRules;\nvar _c;\n$RefreshReg$(_c, \"CombineRules\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CombineRules","rules","setCombinedAST","setError","handleCombine","response","fetch","method","headers","body","JSON","stringify","data","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","_c","$RefreshReg$"],"sources":["C:/Users/ha721/OneDrive/Desktop/Assignment-01/rule-engine/client/rule-combiner/src/components/CombineRules.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction CombineRules({ rules, setCombinedAST, setError }) {\r\n  const handleCombine = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/combine', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ rules }),\r\n      });\r\n      const data = await response.json();\r\n      setCombinedAST(data);\r\n    } catch (err) {\r\n      setError('Failed to combine rules.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Combine Rules</h2>\r\n      <button onClick={handleCombine} disabled={rules.length === 0}>\r\n        Combine Rules\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CombineRules;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC;AAAS,CAAC,EAAE;EACzD,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV;QAAM,CAAC;MAChC,CAAC,CAAC;MACF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCX,cAAc,CAACU,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZX,QAAQ,CAAC,0BAA0B,CAAC;IACtC;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAQqB,OAAO,EAAEhB,aAAc;MAACiB,QAAQ,EAAEpB,KAAK,CAACqB,MAAM,KAAK,CAAE;MAAAP,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACI,EAAA,GAzBQvB,YAAY;AA2BrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}